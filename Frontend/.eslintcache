[{"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/index.js":"1","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/App.js":"2","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/reportWebVitals.js":"3","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/HomePage.jsx":"4","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Destination.jsx":"5","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Login.jsx":"6","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/myConstants.js":"7","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/SmallSignIn.jsx":"8","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/RatingBar.jsx":"9","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/SmallAccount.jsx":"10","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/Search.jsx":"11","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Destinations.jsx":"12","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/MainNavigator.jsx":"13","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/DestinationsModal.jsx":"14","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/MobileMenu.jsx":"15","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Social.jsx":"16","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Social/Components/NavBar.jsx":"17","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Facilities.jsx":"18"},{"size":500,"mtime":1615656142205,"results":"19","hashOfConfig":"20"},{"size":984,"mtime":1619887785259,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612952589432,"results":"22","hashOfConfig":"20"},{"size":14906,"mtime":1619856455243,"results":"23","hashOfConfig":"20"},{"size":33419,"mtime":1619862406206,"results":"24","hashOfConfig":"20"},{"size":792,"mtime":1619080649562,"results":"25","hashOfConfig":"20"},{"size":1619,"mtime":1624712027952,"results":"26","hashOfConfig":"20"},{"size":7887,"mtime":1619856864210,"results":"27","hashOfConfig":"20"},{"size":1121,"mtime":1619019436535,"results":"28","hashOfConfig":"20"},{"size":1073,"mtime":1619599298425,"results":"29","hashOfConfig":"20"},{"size":3703,"mtime":1619859446229,"results":"30","hashOfConfig":"20"},{"size":9241,"mtime":1619782633904,"results":"31","hashOfConfig":"20"},{"size":3133,"mtime":1619614200117,"results":"32","hashOfConfig":"20"},{"size":4958,"mtime":1619518325026,"results":"33","hashOfConfig":"20"},{"size":1503,"mtime":1619612840691,"results":"34","hashOfConfig":"20"},{"size":1401,"mtime":1619887684104,"results":"35","hashOfConfig":"20"},{"size":1984,"mtime":1619882993177,"results":"36","hashOfConfig":"20"},{"size":1475,"mtime":1619891550406,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1m39hct",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/index.js",[],["85","86"],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/App.js",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/reportWebVitals.js",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/HomePage.jsx",["87","88","89","90","91","92"],"import React, { useState, useEffect } from 'react'\nimport { AngleLeftIcon, AngleRightIcon, BookmarkIcon, GlobeIcon, RetweetIcon, SearchIcon } from 'react-line-awesome'\nimport gsap from 'gsap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport c from '../myConstants'\nimport RatingBar from '../Components/RatingBar'\nimport { NavLink } from 'react-router-dom'\nimport { faBars, faCircleNotch, faCompass, faInfoCircle, faSearch, faSignInAlt, faSuitcaseRolling, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport SmallSignIn from '../Components/SmallSignIn'\nimport SmallAccount from '../Components/SmallAccount'\nimport Search from '../Components/Search'\nimport MobileMenu from '../Components/MobileMenu'\n\nfunction HomePage() {\n    const [randomImg, setRandomImg] = useState([])\n    const [selectedImg, setSelectedImg] = useState(0)\n    const [randomPlace, setRandomPlace] = useState(null)\n    const [selectedDestination, setSelectedDestination] = useState(0)\n    const [loggedUser, setLoggedUser] = useState(null)\n    const [showSearch, setShowSearch] = useState(false)\n    const [destinations, setDestinations] = useState([])\n    const [mmenu, setMmenu] = useState(false)\n\n    useEffect(() => {\n        fetch(`${c.backendUrl}/images/random`, { method: 'GET' }).then(async re => {\n            if (re.ok) {\n                let rnd = await re.json()\n                setRandomImg(rnd)\n                selectImage(0)\n            }\n        })\n        fetch(`${c.backendUrl}/places/random`, { method: 'GET' }).then(async re => {\n            if (re.ok) {\n                let rnd = await re.json()\n                setRandomPlace(rnd)\n                setDestinations(rnd.destinations)\n            }\n        })\n        if (localStorage.getItem('authtoken') !== null) {\n            let u = localStorage.getItem('authtoken')\n            getLoggedUser(u)\n        } else {\n            setLoggedUser({ error: true, user: \"No Token\" })\n        }\n    }, [])\n\n    // let grad = [\n    //     \"linear-gradient(45deg, rgba(0, 0, 0, .3), rgba(0, 0, 0, .6))\",\n    //     \"linear-gradient(135deg, rgba(0, 0, 0, .6), rgba(0, 0, 0, .3))\",\n    //     \"linear-gradient(68deg, rgba(0, 0, 0, .3), rgba(0, 0, 0, .6))\",\n    //     \"linear-gradient(42deg, rgba(0, 0, 0, .6), rgba(0, 0, 0, .3))\"\n    // ]\n\n    function selectImage(n) {\n        document.querySelector(`#homeitem${n}`).style.opacity = 1\n        document.querySelector(`#checker${n}`).classList.add(\"selected\")\n        for (var i = 0; i < randomImg.length; i++) {\n            if (i == n) { } else {\n                document.querySelector(`#homeitem${i}`).style.opacity = 0\n                document.querySelector(`#checker${i}`).classList.remove(\"selected\")\n            }\n        }\n        setSelectedImg(n)\n    }\n\n    function getLoggedUser(token) {\n        fetch(`${c.backendUrl}/accounts/loggeduser/${token}`).then(async u => {\n            if (u.ok) {\n                let us = await u.json()\n                setLoggedUser({ error: false, user: us })\n            } else {\n                let us = await u.text()\n                setLoggedUser({ error: true, user: us })\n            }\n        })\n    }\n\n    function selectDestination(i) {\n        try {\n            document.querySelector(`#dest${selectedDestination}`).classList.remove(\"selected\")\n            document.querySelector(`#dest${i}`).classList.add(\"selected\")\n            document.querySelector(`#dest${i}`).scrollIntoView({ behavior: \"smooth\" })\n            setSelectedDestination(i)\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n    function hideAccount() {\n        gsap.fromTo('.smallaccount', 1, { opacity: 1, pointerEvents: \"all\", y: 0 }, { opacity: 0, pointerEvents: \"none\", y: 30 })\n    }\n    function showAccount() {\n        gsap.fromTo('.smallaccount', 1, { opacity: 0, pointerEvents: \"none\", y: 30 }, { opacity: 1, pointerEvents: \"all\", y: 0 })\n    }\n    function signout() {\n        fetch(`${c.backendUrl}/accounts/signout`, { method: 'POST', headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ token: localStorage.getItem('authtoken') }) }).then(r => {\n            setLoggedUser({ error: true, user: \"Signed Out\" })\n            localStorage.removeItem('authtoken')\n        })\n    }\n\n    return (<div class=\"homepage\">\n        <Search shown={showSearch} handleClose={() => setShowSearch(false)} setPlace={(p) => {\n            setShowSearch(false)\n            selectDestination(0)\n            fetch(`${c.backendUrl}/places/${p}`, { method: 'GET' }).then(async re => {\n                if (re.ok) {\n                    let rnd = await re.json()\n                    if (window.innerWidth > 750){\n                        gsap.to('.places', .5, { opacity: 0, y: +30 }).then(() => {\n                            setRandomPlace(rnd)\n                            setDestinations(rnd.destinations)\n                            gsap.to('.places', .5, { opacity: 1, y: -30 })\n                        })\n                    } else {\n                        gsap.to('.places', .5, { opacity: 0 }).then(() => {\n                            setRandomPlace(rnd)\n                            setDestinations(rnd.destinations)\n                            gsap.to('.places', .5, { opacity: 1 })\n                        })\n                    }\n                }\n            })\n        }} />\n        <MobileMenu shown={mmenu} handleClose={()=>{setMmenu(false)}} />\n        <div className=\"navbar\">\n            <div className=\"logo\">Logo</div>\n            <div className=\"menu\">\n                <div className=\"links\">\n                    <ul>\n                        <li className=\"link\"><NavLink to=\"/destinations\" >\n                            <FontAwesomeIcon className=\"nav-link-icon\" icon={faCompass} />\n                            <span>Destinations</span>\n                        </NavLink></li>\n                        <li className=\"link\"><NavLink to=\"/facilities\" >\n                            <FontAwesomeIcon className=\"nav-link-icon\" icon={faSuitcaseRolling} />\n                            <span>Facilities</span>\n                        </NavLink></li>\n                        <li className=\"link\"><NavLink to=\"/social\" >\n                            <FontAwesomeIcon className=\"nav-link-icon\" icon={faThumbsUp} />\n                            <span>Social</span>\n                        </NavLink></li>\n                        <li className=\"link\"><NavLink to=\"/about\" >\n                            <FontAwesomeIcon className=\"nav-link-icon\" icon={faInfoCircle} />\n                            <span>About</span>\n                        </NavLink></li>\n                    </ul>\n                </div>\n                <div className=\"search\" onClick={() => setShowSearch(true)}><SearchIcon /></div>\n                <div className=\"account\">\n                    {\n                        loggedUser === null ?\n                            <div>\n                                <FontAwesomeIcon style={{ fontSize: \"x-large\" }} className=\"rotating\" icon={faCircleNotch} />\n                            </div>\n                            :\n                            loggedUser.error === true ?\n                                <div className=\"signin-nav\" >\n                                    <span onClick={() => {\n                                        gsap.fromTo('.smallsignin', 1, { opacity: 0, pointerEvents: \"none\", y: 30 }, { opacity: 1, pointerEvents: \"all\", y: 0 })\n                                    }}>Sign In</span>\n                                    <FontAwesomeIcon onClick={() => {\n                                        gsap.fromTo('.smallsignin', 1, { opacity: 0, pointerEvents: \"none\", y: 30 }, { opacity: 1, pointerEvents: \"all\", y: 0 })\n                                    }} style={{ fontSize: \"x-large\", marginLeft: \".5rem\" }} icon={faSignInAlt} />\n                                    <SmallSignIn refreshLogin={(u) => {\n                                        getLoggedUser(u.token)\n                                    }} />\n                                </div>\n                                :\n                                <div className=\"loggeduser\">\n                                    <span onClick={showAccount}>Hello, {loggedUser.user.name.toLowerCase()}</span>\n                                    <img onClick={showAccount} src={`${c.backendUrl}${loggedUser.user.image}`} alt=\"\" />\n                                    <SmallAccount signOut={signout} hideAccount={hideAccount} name={loggedUser.user.name.toLowerCase()} />\n                                </div>\n                    }\n                </div>\n            </div>\n            <FontAwesomeIcon className=\"mob-icon\" onClick={() => setMmenu(true)} icon={faBars} />\n        </div>\n        {randomImg.map((r, i) =>\n            <div className=\"homeitem\" id={`homeitem${i}`}>\n                <img className=\"coverimg\" src={`${c.backendUrl}/files${r.url}`} alt=\"\" />\n                <div className=\"covertint\" style={{ background: \"radial-gradient(rgba(0,0,0,0.0), rgba(0,0,0,1)), linear-gradient(45deg, rgba(0, 128, 0, 0.4),rgba(165, 42, 42, 0.4))\" }}></div>\n                <div className=\"hometext\">\n                    <span className=\"bigtext\"><GlobeIcon /> {r.description}, </span>\n                    <span className=\"smalltext\">\n                        &nbsp;{r.country}\n                    </span>\n                </div>\n            </div>\n        )}\n        <div className=\"selector\">\n            {randomImg.map((r, i) =>\n                <div class=\"checker\" id={`checker${i}`} onClick={() => selectImage(i)}></div>\n            )}\n        </div>\n        <div className=\"places\">\n            <div className=\"text\">\n                <div className=\"largetext\">{randomPlace !== null ? randomPlace.name : \"...\"}</div>\n                <div className=\"description\">{randomPlace !== null ? randomPlace.description : \" \"}</div>\n                <div className=\"pls-search\">\n                    <input type=\"text\" id=\"plssearch\" placeholder=\"Filter Destinations\" onChange={(e) => {\n                        let ds = randomPlace.destinations.filter(d => d.name.toLowerCase().includes(e.target.value.toLowerCase()))\n                        setDestinations(ds)\n                        if (destinations.length > 0) {\n                            selectDestination(0)\n                        }\n                    }} />\n                    <FontAwesomeIcon className=\"ic\" icon={faSearch} />\n                </div>\n                <div id=\"refexbtndiv\" style={{ display: \"flex\" }}>\n                    <div className=\"refreshbutton\" title=\"Random Location\" onClick={() => {\n                        if (destinations.length > 0) selectDestination(0)\n                        fetch(`${c.backendUrl}/places/random?prev=${randomPlace.rnd}`, { method: 'GET' }).then(async re => {\n                            if (re.ok) {\n                                document.querySelector('#plssearch').value = \"\"\n                                let rnd = await re.json()\n                                if (window.innerWidth > 750){\n                                    gsap.to('.places', .5, { opacity: 0, y: +30 }).then(() => {\n                                        setRandomPlace(rnd)\n                                        setDestinations(rnd.destinations)\n                                        gsap.to('.places', .5, { opacity: 1, y: -30 })\n                                    })\n                                } else {\n                                    gsap.to('.places', .5, { opacity: 0 }).then(() => {\n                                        setRandomPlace(rnd)\n                                        setDestinations(rnd.destinations)\n                                        gsap.to('.places', .5, { opacity: 1 })\n                                    })\n                                }\n                            }\n                        })\n                    }}><RetweetIcon /></div>\n                    <div className=\"homebutton\" style={{ marginLeft: \"1rem\" }}>Explore <AngleRightIcon /></div>\n                </div>\n            </div>\n            <div className=\"destinations\">\n                {randomPlace !== null ? (destinations.length > 0 ?\n                    destinations\n                        // .filter(d => d.name.toLowerCase().includes(\n                        //     document.querySelector('#plssearch').value.toLowerCase()\n                        // ))\n                        .map((d, i) => <div onClick={(e) => {\n                            //select box\n                            selectDestination(i)\n                        }} id={`dest${i}`} class={i == 0 ? \"selected destination\" : \"destination\"}>\n                            <div className=\"name\">{d.name}</div>\n                            <div className=\"destination-rating\"><RatingBar rating=\"3\" /></div>\n                            <div className=\"bookmark\"><BookmarkIcon /></div>\n                            <img src={`${c.backendUrl}/files/imagebyid/${d.images.split(',')[0]}`} alt=\"\" />\n                            <div className=\"description\">\n                                {d.description.length > 60 ? d.description.substring(0, 60) + \" ...\" : d.description}\n                                <NavLink className=\"visitbtn\" to={`/destination/${d.id}`} >Visit</NavLink>\n                            </div>\n                        </div>) : <div> No Destinations In Found ! </div>) : \"\"}\n                <div className=\"scrollbuttons\">\n                    <div onClick={() => {\n                        if (destinations.length > 0) {\n                            if (selectedDestination == 0)\n                                selectDestination(destinations.length - 1)\n                            else\n                                selectDestination(selectedDestination - 1)\n                        }\n                    }}><AngleLeftIcon /></div>\n                    <div onClick={() => {\n                        if (destinations.length > 0) {\n                            if (selectedDestination == destinations.length - 1)\n                                selectDestination(0)\n                            else\n                                selectDestination(selectedDestination + 1)\n                        }\n                    }}><AngleRightIcon /></div>\n                </div>\n                <div className=\"scrollindicator\">\n                    {randomPlace !== null ? (<>\n                        <span className=\"position\">{(selectedDestination + 1).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}</span>\n                        <div className=\"line\">out</div>\n                        <span className=\"outof\">{(randomPlace.destinations.length).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}</span>\n                    </>) : <></>}\n                </div>\n            </div>\n        </div>\n    </div>)\n}\nexport default HomePage","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Destination.jsx",["93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport moment from 'moment'\n\nimport './css/destination.css'\nimport c from '../myConstants'\nimport SmallSignIn from '../Components/SmallSignIn'\nimport SmallAccount from '../Components/SmallAccount'\nimport MobileMenu from '../Components/MobileMenu'\nimport Search from '../Components/Search'\nimport { faBars, faCircleNotch, faComment, faComments, faCompass, faExclamationTriangle, faGlobeAfrica, faHome, faImage, faSearch, faShareAlt, faSpinner, faSuitcaseRolling, faThumbsDown, faThumbsUp, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { NavLink } from 'react-router-dom'\nimport gsap from 'gsap'\n\nfunction Destination() {\n    const [destination, setDestination] = useState({ state: \"waiting\", bg: \"white\" })\n    const [ode, setOde] = useState([])\n    const [fac, setFac] = useState([])\n    const [im, setIm] = useState(0)\n    const [dlikes, setDlikes] = useState([])\n    const [myKind, setMyKind] = useState([])\n    const [comments, setComments] = useState([])\n    const [cmr, setCmr] = useState([])\n    const [loggedUser, setLoggedUser] = useState(null)\n    const [mmenu, setMmenu] = useState(false)\n    const [showSearch, setShowSearch] = useState(false)\n\n    let id = window.location.pathname.split('/')[2]\n\n    useEffect(() => {\n        loadDestination(id)\n        getMyKind(id)\n        getComments(id)\n    }, [])\n    function loadDestination(x) {\n        fetch(`${c.backendUrl}/destinations/${x}`).then(async r => {\n            if (r.ok) {\n                let d = await r.json()\n                setDestination({ state: \"success\", dd: d[0] })\n                fetch(`${c.backendUrl}/destinations/inplace/${d[0].place.id}`).then(async r => {\n                    if (r.ok) {\n                        let od = await r.json()\n                        setOde(od)\n                    }\n                })\n                fetch(`${c.backendUrl}/facilities/inplace/${d[0].place.id}`).then(async r => {\n                    if (r.ok) {\n                        let od = await r.json()\n                        setFac(od)\n                    }\n                })\n            } else {\n                let e = await r.text()\n                setDestination({ state: \"error\", details: e, bg: \"white\" })\n            }\n        })\n        destLikes(x)\n        getLoggedUser(localStorage.getItem('authtoken'))\n    }\n    function selectOption(e) {\n        document.querySelector('.selected').classList.remove('selected')\n        e.target.classList.add('selected')\n    }\n\n    function destLikes(d) {\n        fetch(`${c.backendUrl}/likes/e/D-${d}`).then(async l => {\n            if (!l.ok) {\n                let ll = await l.text()\n                console.log(ll)\n            }\n            let ll = await l.json()\n            setDlikes(ll)\n        })\n    }\n\n    function getMyKind(d) {\n        fetch(`${c.backendUrl}/likes/my-e/D-${d}`, { headers: { 'authtoken': localStorage.getItem('authtoken') } }).then(async l => {\n            if (!l.ok) {\n                let ll = await l.text()\n                console.log(ll)\n            } else {\n                let ll = await l.json()\n                console.log('my reaction', ll)\n                setMyKind(ll)\n            }\n        })\n    }\n\n    function actUpon(k) {\n        fetch(`${c.backendUrl}/likes/D-${id}/${k}`, { method: 'POST', headers: { 'authtoken': localStorage.getItem('authtoken') } }).then(async l => {\n            if (l.ok) {\n                console.log('acted')\n                getMyKind(id)\n                destLikes(id)\n            }\n            else {\n                let ll = await l.json()\n                console.log(ll)\n                getMyKind(id)\n                destLikes(id)\n            }\n        })\n    }\n\n    function getComments(d) {\n        fetch(`${c.backendUrl}/comments/e/D-${d}`, { headers: { 'authtoken': localStorage.getItem('authtoken') } }).then(async l => {\n            if (!l.ok) {\n                let ll = await l.text()\n                console.log(ll)\n            } else {\n                let ll = await l.json()\n                console.log('destination comments', ll)\n                setComments(ll)\n            }\n        })\n    }\n\n    function makeComment(ent, mess) {\n        if (mess == null || mess.length < 1) return alert('Message Cannot be Null')\n        fetch(`${c.backendUrl}/comments/D-${ent}`, { method: 'POST', headers: { 'authtoken': localStorage.getItem('authtoken'), \"Content-Type\": \"application/json\" }, body: JSON.stringify({ message: mess }) })\n            .then(async cm => {\n                if (!cm.ok) {\n                    let cmm = await cm.json()\n                    console.log(cmm)\n                } else {\n                    getComments(ent)\n                }\n            })\n    }\n\n    function getLoggedUser(token) {\n        c.getLoggedUser(token).then(async u => {\n            if (u.ok) {\n                let us = await u.json()\n                setLoggedUser({ error: false, user: us })\n            } else {\n                let us = await u.text()\n                setLoggedUser({ error: true, user: us })\n            }\n        })\n    }\n\n    return (\n        <div className=\"destination-page\">\n            <MobileMenu shown={mmenu} handleClose={() => setMmenu(false)} />\n            <Search shown={showSearch} handleClose={() => setShowSearch(false)}></Search>\n            <destnav style={{ display: 'flex', alignItems: 'center' }}>\n                <FontAwesomeIcon icon={faBars} onClick={() => setMmenu(true)} className=\"mobiletoggle\" />\n                <FontAwesomeIcon style={{cursor:'pointer'}} icon={faSearch} className='destsearch' onClick={() => setShowSearch(true)} />\n                <links><ul style={{ display: 'flex', flexDirection: 'row', listStyle: 'none' }}>\n                    <li><NavLink to='/home'>Home</NavLink></li>\n                    <li><NavLink to='/Destinations'>Destinations</NavLink></li>\n                    <li><NavLink to='/Facilities'>Facilities</NavLink></li>\n                    <li><NavLink to='/Social'>Social</NavLink></li>\n                    <li><NavLink to='/About'>About</NavLink></li>\n                </ul></links>\n                <account style={{}}>\n                    {loggedUser == null ? <FontAwesomeIcon icon={faCircleNotch} className='rotating' /> : loggedUser.error ? <>\n                        <FontAwesomeIcon className=\"notlogged\" icon={faUser} onClick={() => {\n                            gsap.fromTo('.smallsignin', 1, { opacity: 0, pointerEvents: \"none\", y: 20 }, { opacity: 1, pointerEvents: \"all\", y: -20 })\n                        }} />\n                        <SmallSignIn refreshLogin={(u) => {\n                            getLoggedUser(u.token)\n                        }} />\n                    </> : <loggeduser>\n                        <div onClick={() => {\n                            gsap.fromTo('.smallaccount', 1, { opacity: 0, pointerEvents: \"none\", y: 20 }, { opacity: 1, pointerEvents: \"all\", y: -20 })\n                        }} style={{ cursor: 'pointer', width: 40, height: 40, borderRadius: '50%', background: `url('${c.backendUrl}${loggedUser.user.image}')`, backgroundSize: 'cover' }} alt=\"\" ></div>\n                        <SmallAccount signOut={() => {\n                            fetch(`${c.backendUrl}/accounts/signout`, { method: 'POST', headers: { \"Content-Type\": \"application/json\" }, body: JSON.stringify({ token: localStorage.getItem('authtoken') }) }).then(r => {\n                                setLoggedUser({ error: true, user: \"Signed Out\" })\n                                localStorage.removeItem('authtoken')\n                            })\n                        }} name={loggedUser.user.name.toLowerCase()} hideAccount={() => {\n                            gsap.fromTo('.smallaccount', 1, { opacity: 1, pointerEvents: \"all\", y: -20 }, { opacity: 0, pointerEvents: \"none\", y: 20 })\n                        }} />\n                    </loggeduser>}\n                </account>\n            </destnav>\n            {\n                destination.state === \"waiting\" ? <FontAwesomeIcon size=\"5x\" className=\"rotating\" icon={faSpinner} /> :\n                    destination.state === \"error\" ? <FontAwesomeIcon size=\"5x\" icon={faExclamationTriangle} /> : <>\n                        <img src={`${c.backendUrl}/files/imagebyid/${destination.dd.images.split(',')[im]}`} alt=\"\" className=\"bgimg\" />\n                        <div className=\"blur\"></div>\n                        <div className=\"container\">\n                            <NavLink to=\"/\" className=\"homelink\" style={{ display: 'none' }}>\n                                <FontAwesomeIcon icon={faHome} />\n                                <span>Home</span>\n                            </NavLink>\n                            <img src={`${c.backendUrl}/files/imagebyid/${destination.dd.images.split(',')[im]}`} alt=\"\" />\n                            <div className=\"content\">\n                                <div className=\"labelcontainer\">\n                                    <span className=\"location\"><FontAwesomeIcon icon={faGlobeAfrica} />&nbsp;{destination.dd.place.name}, {destination.dd.place.country}</span>\n                                    <span className=\"name\">{destination.dd.name}</span>\n                                    <span className=\"description\">{destination.dd.description}</span>\n                                    <div className=\"thumbnails\">\n                                        {\n                                            destination.dd.images.split(',').map((i, v) => (\n                                                <img className=\"thimg\" onClick={() => {\n                                                    setIm(v)\n                                                }} src={`${c.backendUrl}/files/imagebyid/${i}`} alt=\"\" />\n                                            ))\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"contentcontainer\">\n                                    <div className=\"dcontent dconsel\" id=\"near\">\n                                        <span className=\"title\">Nearby Destinations</span>\n                                        <div style={{\n                                            borderRadius: 5,\n                                            display: 'flex', alignItems: 'center', padding: 10, margin: 5, outline: 'none', border: 'none', background: 'rgba(0,0,0,.1)'\n                                        }}>\n                                            <FontAwesomeIcon icon={faSearch} style={{ color: 'rgba(0,0,0,.5)', marginRight: 10 }} />\n                                            <input style={{ flex: \"1\", background: 'transparent', outline: 'none', border: 'none' }} placeholder=\"Filter Destinations\" />\n                                        </div>\n                                        <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", marginTop: \".5rem\", height: \"100%\", overflow: \"scroll\" }}>\n                                            {\n                                                ode.filter(x => x.id != id).map(o => (<>\n                                                    <a href={`/destination/${o.id}`} className=\"otherd\" onClick={() => loadDestination(o.id)}>\n                                                        <img className=\"ctimg\" style={{ width: \"100px\", height: \"100px\", position: \"relative\", border: \"solid 1px black\" }} src={`${c.backendUrl}/files/imagebyid/${o.images.split(',')[0]}`} alt=\"\" />\n                                                        <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", position: \"relative\", padding: \"0 .5rem\" }}>\n                                                            <span style={{ marginBottom: \".5rem\", fontFamily: 'MSB' }}>{o.name}</span>\n                                                            <span style={{ fontSize: \"small\" }}>{\n                                                                o.description.length > 80 ? o.description.substring(0, 80) + \"...\" : o.description\n                                                            }</span>\n                                                        </div>\n                                                    </a>\n                                                </>))\n                                            }\n                                        </div>\n                                        <div className=\"bottom\">Suggest</div>\n                                    </div>\n                                    <div className=\"dcontent\" id=\"facilities\">\n                                        <span className=\"title\">Nearby Facilities</span>\n                                        <div style={{\n                                            borderRadius: 5,\n                                            display: 'flex', alignItems: 'center', padding: 10, margin: 5, outline: 'none', border: 'none', background: 'rgba(0,0,0,.1)'\n                                        }}>\n                                            <FontAwesomeIcon icon={faSearch} style={{ color: 'rgba(0,0,0,.5)', marginRight: 10 }} />\n                                            <input style={{ flex: \"1\", background: 'transparent', outline: 'none', border: 'none' }} placeholder=\"Filter Facilities\" />\n                                        </div>\n                                        <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", marginTop: \".5rem\", height: \"100%\", overflow: \"scroll\" }}>\n                                            {\n                                                fac.map(o => (<>\n                                                    <NavLink to={`/facility/${o.id}`} className=\"otherd\" onClick={() => loadDestination(o.id)}>\n                                                        <img style={{ width: \"100px\", height: \"100px\", position: \"relative\", border: \"solid 1px black\" }} src={`${c.backendUrl}/files/facility/imagebyid/${o.images.split(',')[0]}`} alt=\"\" />\n                                                        <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", position: \"relative\", padding: \"0 .5rem\" }}>\n                                                            <span style={{ marginBottom: \".5rem\", fontFamily: 'MSB' }}>{o.name}</span>\n                                                            <span style={{ fontSize: \"small\" }}>{\n                                                                o.description.length > 80 ? o.description.substring(0, 80) + \"...\" : o.description\n                                                            }</span>\n                                                        </div>\n                                                    </NavLink>\n                                                </>))\n                                            }\n                                        </div>\n                                        <div className=\"bottom\">Report / Suggest</div>\n                                    </div>\n                                    <div className=\"dcontent\" id=\"comments\">\n                                        <span className=\"title\">Comments {comments.length.toLocaleString()}</span>\n                                        <div className=\"comments-list\">\n                                            {comments.map((co, i) => <>\n                                                <div className=\"ccm\" id={`C-${co.id}`}>\n                                                    <img src={`${c.backendUrl}${co.image}`} alt=\"\" className=\"ccm-image\" />\n                                                    <div className=\"ccm-content\">\n                                                        <div className=\"ccm-user\">\n                                                            <span className=\"ccm-user-name\">{co.name}</span>\n                                                            <span className=\"ccm-date\">{moment(co.commentdate).fromNow(false)}</span>\n                                                        </div>\n                                                        <div className=\"ccm-message\">\n                                                            {co.message}\n                                                        </div>\n                                                        <div className=\"ccm-actions\">\n                                                            <div className=\"ccm-action\" onClick={() => {\n                                                                c.makeLike(`C-${co.id}`, 1).then(() => {\n                                                                    c.getEntityLikes(`C-${co.id}`).then(async l => {\n                                                                        if (!l.ok) { let e = await l.json(); console.log(e) }\n                                                                        else {\n                                                                            let lcom = await l.json()\n                                                                            let tu = lcom.filter(ll => ll.kind == 1)\n                                                                            let td = lcom.filter(ll => ll.kind == 0)\n                                                                            document.querySelector(`#TU-C-${co.id}`).innerText = tu.length\n                                                                            document.querySelector(`#TD-C-${co.id}`).innerText = td.length\n                                                                        }\n                                                                    })\n                                                                })\n                                                            }}>\n                                                                <FontAwesomeIcon className=\"ccm-ic\" icon={faThumbsUp} />\n                                                                <dcomt id={`TU-C-${co.id}`}>{co.thumbsup}</dcomt>\n                                                            </div>\n                                                            <div className=\"ccm-action\" onClick={() => {\n                                                                c.makeLike(`C-${co.id}`, 0).then(() => {\n                                                                    c.getEntityLikes(`C-${co.id}`).then(async l => {\n                                                                        if (!l.ok) { let e = await l.json(); console.log(e) }\n                                                                        else {\n                                                                            let lcom = await l.json()\n                                                                            let tu = lcom.filter(ll => ll.kind == 1)\n                                                                            let td = lcom.filter(ll => ll.kind == 0)\n                                                                            document.querySelector(`#TU-C-${co.id}`).innerText = tu.length\n                                                                            document.querySelector(`#TD-C-${co.id}`).innerText = td.length\n                                                                        }\n                                                                    })\n                                                                })\n                                                            }}>\n                                                                <FontAwesomeIcon className=\"ccm-ic\" icon={faThumbsDown} />\n                                                                <dcomt id={`TD-C-${co.id}`}>{co.thumbsdown}</dcomt>\n                                                            </div>\n                                                            <div className=\"ccm-action\" onClick={() => {\n                                                                setCmr([])\n                                                                c.getEntityComments(`C-${co.id}`).then(async cm => {\n                                                                    if (cm.ok) {\n                                                                        let cmm = await cm.json()\n                                                                        setCmr(cmm)\n                                                                    }\n                                                                })\n                                                                //console.log(commentR(co.rawreplies), document.querySelector(`#dcomrep-list-${co.id}`))\n                                                                //document.querySelector(`#dcomrep-list-${co.id}`).innerHTML = commentR(co.rawreplies)\n                                                                if (document.querySelector(`#dcomreply-${co.id}`).style.display === 'none') {\n                                                                    document.querySelector(`.cmt-bottom`).style.display = 'none'\n                                                                    document.querySelectorAll('decomreplies').forEach(d => {\n                                                                        d.style.display = 'none'\n                                                                    })\n                                                                    document.querySelectorAll('decomreply').forEach(d => {\n                                                                        d.style.display = 'none'\n                                                                    })\n                                                                    document.querySelector(`#dcomreply-${co.id}`).style.display = 'block'\n                                                                    document.querySelector(`#dcomrep-list-${co.id}`).style.display = 'block'\n                                                                    document.querySelector(`#repbot-${co.id}`).scrollIntoView({ behavior: 'smooth' })\n                                                                }\n                                                                else {\n                                                                    document.querySelector(`#dcomreply-${co.id}`).style.display = 'none'\n                                                                    document.querySelector(`.cmt-bottom`).style.display = 'block'\n                                                                    document.querySelector(`#dcomrep-list-${co.id}`).style.display = 'none'\n                                                                }\n\n                                                            }}>\n                                                                <FontAwesomeIcon className=\"ccm-ic\" icon={faComment} />\n                                                                {co.replies == 0 ? \"Reply\" : co.replies == 1 ? \"1 Reply\" : `${co.replies.toLocaleString()} Replies`}\n                                                            </div>\n                                                            <div className=\"ccm-action\">\n                                                                <FontAwesomeIcon className=\"ccm-ic\" icon={faShareAlt} />\n                                                            </div>\n                                                        </div>\n                                                        <decomreplies id={`dcomrep-list-${co.id}`} style={{ display: 'none' }} >\n                                                            {\n                                                                cmr.map(r => <decomreplyitem className='decom-reply'>\n                                                                    <img className='decomreplyimg' src={`${c.backendUrl}${r.image}`} style={{ width: 40, height: 40, borderRadius: '50%' }} />\n                                                                    <decomreplyitemcontent>\n                                                                        <decomreplyitemu>\n                                                                            <span>{r.name}</span>\n                                                                            <span>{moment(r.commentdate).fromNow(false)}</span>\n                                                                        </decomreplyitemu>\n                                                                        <decomreplyitemc>\n                                                                            {r.message}\n                                                                        </decomreplyitemc>\n                                                                    </decomreplyitemcontent>\n                                                                </decomreplyitem>)\n                                                            }\n                                                        </decomreplies>\n                                                        <decomreply id={`dcomreply-${co.id}`}>\n                                                            <textarea id={`dcomreply-textarea-${co.id}`} placeholder='Reply...' />\n                                                            <button onClick={() => {\n                                                                c.makeComment(`C-${co.id}`, document.querySelector(`#dcomreply-textarea-${co.id}`).value).then(async cm => {\n                                                                    if (!cm.ok) { let cmm = await cm.text(); alert('comment not made') }\n                                                                    c.getEntityComments(`C-${co.id}`).then(async cc => {\n                                                                        if (cc.ok) {\n                                                                            let rp = await cc.json()\n                                                                            setCmr(rp)\n                                                                            document.querySelector(`#dcomreply-textarea-${co.id}`).value = ''\n                                                                        }\n                                                                    })\n                                                                })\n                                                            }}>Reply</button>\n                                                        </decomreply>\n                                                        <repbot id={`repbot-${co.id}`}></repbot>\n                                                    </div>\n                                                </div>\n                                                <div id=\"ccmbottomdiv\"></div>\n                                            </>)}\n                                        </div>\n                                        <div className=\"cmt-bottom\">\n                                            <div className=\"comment\">\n                                                <textarea name=\"\" id=\"cmt-message\" rows=\"5\" placeholder=\"Say Something ...\" />\n                                                <div className=\"comment-actions\">\n                                                    <button>\n                                                        <FontAwesomeIcon icon={faImage} />\n                                                    </button>\n                                                    <button onClick={() => makeComment(\n                                                        `${id}`,\n                                                        document.querySelector('#cmt-message').value\n                                                    )}>Post</button>\n                                                </div>\n\n                                            </div>\n                                        </div>\n                                        <div id=\"ccmmbottomdiv\"></div>\n                                    </div>\n                                </div>\n                                <div className=\"optionscontainer\">\n                                    <div className=\"option selected\" onClick={(e) => {\n                                        selectOption(e)\n                                        document.querySelector(\"#near\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#facilities\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#comments\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#near\").classList.add(\"dconsel\")\n                                        document.querySelector(\"#near\").scrollIntoView({ behavior: \"smooth\" })\n                                    }}>\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faCompass} />\n                                        <span style={{ fontSize: \"small\", fontFamily: \"MSB\", position: 'absolute', bottom: 5 }}>{(ode.length - 1).toLocaleString()}</span>\n                                    </div>\n                                    <div className=\"option\" onClick={(e) => {\n                                        selectOption(e)\n                                        document.querySelector(\"#near\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#facilities\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#comments\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#facilities\").classList.add(\"dconsel\")\n                                        document.querySelector(\"#facilities\").scrollIntoView({ behavior: \"smooth\" })\n                                    }}>\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faSuitcaseRolling} />\n                                        <span style={{ fontSize: \"small\", fontFamily: \"MSB\", position: 'absolute', bottom: 5 }}>{fac.length.toLocaleString()}</span>\n                                    </div>\n                                    <div className=\"option\" onClick={(e) => {\n                                        selectOption(e)\n                                        document.querySelector(\"#near\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#facilities\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#comments\").classList.remove(\"dconsel\")\n                                        document.querySelector(\"#comments\").classList.add(\"dconsel\")\n                                        document.querySelector(\"#comments\").scrollIntoView({ behavior: \"smooth\" })\n                                        if (comments.length > 0) {\n                                            document.querySelector(`#ccmbottomdiv`).scrollIntoView({ behavior: \"smooth\" })\n                                            document.querySelector(`#ccmmbottomdiv`).scrollIntoView({ behavior: \"smooth\" })\n                                        }\n                                    }}>\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faComments} />\n                                        <span style={{ fontSize: \"small\", fontFamily: \"MSB\", position: 'absolute', bottom: 5 }}>{comments.length}</span>\n                                    </div>\n                                    <div style={{ background: myKind.length > 0 && myKind[0].kind == 1 ? \"rgba(14, 82, 34, 1)\" : \"transparent\" }} className=\"option\" onClick={() => {\n                                        actUpon(1)\n                                    }}>\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faThumbsUp} />\n                                        <span style={{ fontSize: \"small\", fontFamily: \"MSB\", position: 'absolute', bottom: 5, pointerEvents: 'none' }}>{dlikes.filter(l => l.kind == 1).length.toLocaleString()}</span>\n                                    </div>\n                                    <div className=\"option\" style={{ background: myKind.length > 0 && myKind[0].kind == 0 ? \"rgb(105, 41, 55)\" : \"transparent\" }} onClick={() => {\n                                        actUpon(0)\n                                    }} >\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faThumbsDown} />\n                                        <span style={{ fontSize: \"small\", fontFamily: \"MSB\", position: 'absolute', bottom: 5, pointerEvents: 'none' }}>{dlikes.filter(l => l.kind == 0).length.toLocaleString()}</span>\n                                    </div>\n                                    <div className=\"option\" >\n                                        <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faShareAlt} />\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </>\n            }\n        </div>\n    )\n}\nexport default Destination","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Login.jsx",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/myConstants.js",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/SmallSignIn.jsx",["107"],"import './css/smallsignin.css'\nimport c from '../myConstants'\nimport GoogleLogin from 'react-google-login'\nimport FacebookLogin from 'react-facebook-login';\nimport { TimesIcon } from 'react-line-awesome'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport gsap from 'gsap'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nfunction handleGoogleLogin(d, p) {\n    fetch(`${c.backendUrl}/google/login`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            token: d.tokenId\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }).then(async r => {\n        if (r.ok) {\n            let resp = await r.json()\n            localStorage.setItem('authtoken', resp.token)\n            p.refreshLogin(resp)\n        }\n    })\n}\n\nfunction SmallSignIn(params) {\n    return (\n        <div className=\"smallsignin\">\n            <TimesIcon onClick={() => {\n                gsap.fromTo('.smallsignin', 1, { opacity: 1, pointerEvents: \"all\", y: 0 }, { opacity: 0, pointerEvents: \"none\", y: 30 })\n            }} className=\"close\" />\n            <div id=\"smallSignIn\">\n                <b>Sign In</b>\n                <div className=\"input\">\n                    <input type=\"email\" id=\"smsemail\" placeholder=\"Email\" />\n                    <input type=\"password\" id=\"smspassword\" placeholder=\"Password\" />\n                    <b style={{ padding: '.5rem', display: 'none', fontSize: 'small', fontFamily: 'MSB' }} id=\"smsresp\"></b>\n                    <div style={{height: '.5rem'}} >{\" \"}</div>\n                    <forgotpassword>Forgot Password</forgotpassword>\n                    <div style={{height: '.5rem'}} >{\" \"}</div>\n                    <button style={{ display: 'flex', alignItems: 'center', outline: 'none' }} onClick={(e) => {\n                        document.querySelector('#smsic').style.display = 'block'\n                        document.querySelector('#smsresp').style.display = 'none'\n                        e.target.style.pointerEvents = 'none'\n                        fetch(`${c.backendUrl}/accounts/login`, {\n                            method: 'POST', body: JSON.stringify({\n                                email: document.querySelector(\"#smsemail\").value,\n                                password: document.querySelector(\"#smspassword\").value,\n                            }),\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            }\n                        }).then(async r => {\n                            if (r.ok) {\n                                let rr = await r.json();\n                                document.querySelector('#smsic').style.display = 'none'\n                                document.querySelector('#smsresp').style.color = 'green'\n                                document.querySelector('#smsresp').style.display = 'block'\n                                document.querySelector('#smsresp').innerText = 'Logged In'\n                                e.target.style.pointerEvents = 'all'\n                                localStorage.setItem('authtoken', rr.token)\n                                params.refreshLogin(rr)\n                            } else {\n                                let rr = await r.text()\n                                document.querySelector('#smsic').style.display = 'none'\n                                document.querySelector('#smsresp').style.color = 'red'\n                                document.querySelector('#smsresp').style.display = 'block'\n                                document.querySelector('#smsresp').innerText = `${rr}`\n                                e.target.style.pointerEvents = 'all'\n                            }\n                        })}}><FontAwesomeIcon icon={faCircleNotch} className=\"rotating\" id=\"smsic\" style={{ marginRight: \".5rem\", display: 'none' }} />\n                            Sign In</button>\n                </div>\n                <div className=\"actions\">\n                    <GoogleLogin\n                        style={{\n                            borderRadius: \"100px\"\n                        }}\n                        clientId={c.googleCode}\n                        buttonText=\"Log in with Google\"\n                        onSuccess={(g) => { handleGoogleLogin(g, params) }}\n                        onFailure={() => { }}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </div>\n                <hr />\n                <button className=\"signup\" onClick={() => {\n                    document.querySelector('#smallSignIn').style.display = 'none';\n                    document.querySelector('#smallSignUp').style.display = 'block';\n                }}>Sign Up</button>\n            </div>\n            <div id=\"smallSignUp\">\n                <b>Create an Account</b>\n                <div className=\"input\">\n                    <input type=\"text\" id=\"smsuname\" placeholder=\"Your Name\" />\n                    <input type=\"email\" id=\"smsuemail\" placeholder=\"Email Address\" />\n                    <input type=\"password\" id=\"smsupassword\" placeholder=\"Password\" />\n                    <b style={{ padding: '.5rem', display: 'none', fontSize: 'small', fontFamily: 'MSB' }} id=\"smsuresp\"></b>\n                    <button style={{ display: 'flex', alignItems: 'center', outline: 'none' }} onClick={(e) => {\n                        document.querySelector('#smsuic').style.display = 'block'\n                        document.querySelector('#smsuresp').style.display = 'none'\n                        e.target.style.pointerEvents = 'none'\n                        fetch(`${c.backendUrl}/accounts/signup`, {\n                            method: 'POST', body: JSON.stringify({\n                                name: document.querySelector(\"#smsuname\").value,\n                                email: document.querySelector(\"#smsuemail\").value,\n                                password: document.querySelector(\"#smsupassword\").value,\n                            }),\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            }\n                        }).then(async r => {\n                            if (r.ok) {\n                                let rr = await r.text();\n                                document.querySelector('#smsuic').style.display = 'none'\n                                document.querySelector('#smsuresp').style.color = 'green'\n                                document.querySelector('#smsuresp').style.display = 'block'\n                                document.querySelector('#smsuresp').innerText = rr\n                                e.target.style.pointerEvents = 'all'\n                            } else {\n                                let rr = await r.text()\n                                document.querySelector('#smsuic').style.display = 'none'\n                                document.querySelector('#smsuresp').style.color = 'red'\n                                document.querySelector('#smsuresp').style.display = 'block'\n                                document.querySelector('#smsuresp').innerText = `${rr}`\n                                e.target.style.pointerEvents = 'all'\n                            }\n                        })\n                    }}><FontAwesomeIcon icon={faCircleNotch} id=\"smsuic\" className=\"rotating\" style={{ marginRight: \".5rem\", display: 'none' }} />\n                        Sign Up</button>\n                </div>\n                <hr />\n                <button className=\"signup\" onClick={() => {\n                    document.querySelector('#smallSignIn').style.display = 'block';\n                    document.querySelector('#smallSignUp').style.display = 'none';\n                }}>Sign In</button>\n            </div>\n        </div>\n    )\n}\n\nexport default SmallSignIn","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/RatingBar.jsx",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/SmallAccount.jsx",["108"],"import { TimesIcon } from 'react-line-awesome'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport c from '../myConstants'\nimport './css/smallaccount.css'\nimport { faSuitcaseRolling, faUser, faUserCog } from '@fortawesome/free-solid-svg-icons'\n\nfunction SmallAccount(params) {\n    return (\n        <div className=\"smallaccount\">\n            <TimesIcon className=\"close\" onClick={()=>{params.hideAccount()}} />\n            <div style={{ color: \"#8a5019\", textTransform: 'capitalize' }}>Hi {params.name}</div>\n            <ul>\n                <li><FontAwesomeIcon style={{ marginRight: 10 }} icon={faUser} />My Profile</li>\n                <li><FontAwesomeIcon style={{ marginRight: 10 }} icon={faSuitcaseRolling} />My Trips</li>\n                <div className=\"line\"></div>\n                <div className=\"separator\"></div>\n                <li><FontAwesomeIcon style={{ marginRight: 10 }} icon={faUserCog} />Settings</li>\n            </ul>\n            <button onClick={params.signOut}>Sign Out</button>\n        </div>\n    )\n}\n\nexport default SmallAccount","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/Search.jsx",["109","110"],"import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { TimesIcon } from 'react-line-awesome'\nimport { NavLink } from 'react-router-dom'\n\nimport './css/search.css'\nimport c from '../myConstants'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons'\n\nfunction Search(p) {\n    const [search, setSearch] = useState(\"\")\n    const [st, setSt] = useState(\"wait\")\n    const [results, setResults] = useState({ destinations: [], locations: [] })\n    return (\n        <div style={\n            p.shown ? { opacity: 1, pointerEvents: \"all\" } : { opacity: 0, pointerEvents: \"none\" }\n        } className=\"search-component\" >\n            <TimesIcon onClick={p.handleClose} className=\"search-close\" />\n            <div className=\"search-content\">\n                <input type=\"text\" placeholder=\"Type Something...\" onKeyUp={(e) => {\n                    if (e.key.toLowerCase() === \"enter\" && e.target.value.length > 0) {\n                        setSt(\"start\")\n                        fetch(`${c.backendUrl}/search?q=${search}`).then(async re => {\n                            if (re.ok) {\n                                let r = await re.json()\n                                setResults(r)\n                                setSt(\"end\")\n                            }\n                        })\n                    }\n                    setSearch(e.target.value)\n                }} />\n                <div className=\"search-results\">\n                    {\n                        st == \"wait\" ? \"...\" :\n                            st === \"start\" ? <FontAwesomeIcon className=\"rotating\" icon={faCircleNotch} /> :\n                                st === \"end\" ? <>\n                                    <div className=\"destinations\">\n                                        {\n                                            results.destinations.length < 1 ? \"No Destinations\" : <div>\n                                                <span>{results.destinations.length > 1 ? `${results.destinations.length.toLocaleString()} Destinations` : `${results.destinations.length.toLocaleString()} Destination`} </span>\n                                                <div className=\"dest-res\" style={{ padding: \"1rem\" }}> {\n                                                    results.destinations.map((d, i) => i < results.destinations.length - 1 ? <a href={`/destination/${d.id}`}>{d.name}, &nbsp;</a> : <a href={`/destination/${d.id}`}>{d.name}</a>)\n                                                }</div></div>\n                                        }\n                                    </div>\n                                    <div className=\"locations\">\n                                        {\n                                            results.places.length < 1 ? \"No Locations\" : <div>\n                                                <span>{results.places.length > 1 ? `${results.places.length.toLocaleString()} Locations` : `${results.places.length.toLocaleString()} Location`} </span>\n                                                <div className=\"dest-res\" style={{ padding: \"1rem\" }}> {\n                                                    results.places.map((d, i) => i < results.places.length - 1 ? <span className=\"loc\" onClick={()=>p.setPlace(d.id)}>{d.name}, &nbsp;</span> : <span className=\"loc\" onClick={()=>p.setPlace(d.id)}>{d.name}</span>)\n                                                }</div></div>\n                                        }\n                                    </div>\n                                </> : \"Error!\"\n                    }\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Destinations.jsx",["111"],"import React, { useState, useEffect } from 'react'\nimport { faPlus, faPlusSquare, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './css/destinations.css'\nimport MainNav from '../Components/MainNavigator'\nimport Search from '../Components/Search'\nimport DestinationsModal from '../Components/DestinationsModal'\nimport c from '../myConstants'\nimport MobileMenu from '../Components/MobileMenu'\n\nfunction Destinations() {\n    const [randomImage, setrandomImage] = useState(null)\n    const [places, setPlaces] = useState([])\n    const [placesF, setPlacesF] = useState([])\n    const [oSearch, setOSearch] = useState(false)\n    const [mMenu, setMMenu] = useState(false)\n    const [dMod, setDMod] = useState(false)\n    const [selPlace, setSelPlace] = useState(null)\n    useEffect(() => {\n        fetch(`${c.backendUrl}/images/random`, { method: 'GET' }).then(async re => {\n            if (re.ok) {\n                let rnd = await re.json()\n                setrandomImage(rnd)\n            }\n        })\n        fetch(`${c.backendUrl}/places`, { method: 'GET' }).then(async re => {\n            if (re.ok) {\n                let rnd = await re.json()\n                setPlaces(rnd)\n                setPlacesF(rnd)\n            }\n        })\n    }, [])\n    function getRImg(p) {\n        if (p.destinations.length > 0) {\n            let ranDes = c.getRandomInt(0, p.destinations.length - 1);\n            let imgss = p.destinations[ranDes].images.split(',')\n            if (imgss.length > 0) {\n                let ranIm = c.getRandomInt(0, imgss.length - 1)\n                return `${c.backendUrl}/files/imagebyid/${p.destinations[ranDes].images.split(',')[ranIm]}`\n            }\n        } else\n            return `${c.backendUrl}/files/imagebyid/14`\n    }\n    return (\n        <div style={randomImage == null ? {} : {\n            //backgroundImage: `url('${c.backendUrl}/files${randomImage[0].url}')`,\n            backgroundSize: \"cover\",\n            backgroundAttachment: \"fixed\"\n        }}>\n            <DestinationsModal place={selPlace} shown={dMod} closeModal={() => setDMod(false)} />\n            <Search shown={oSearch} handleClose={() => setOSearch(false)} setPlace={(p) => {\n                setOSearch(false)\n                /*selectDestination(0)\n                fetch(`${c.backendUrl}/places/${p}`, { method: 'GET' }).then(async re => {\n                    if (re.ok) {\n                        let rnd = await re.json()\n                        gsap.to('.places', .5, { opacity: 0, y: +30 }).then(() => {\n                            console.log(rnd)\n                            setRandomPlace(rnd)\n                            setDestinations(rnd.destinations)\n                            gsap.to('.places', .5, { opacity: 1, y: -30 })\n                        })\n                    }\n                })*/\n            }} />\n            <div className=\"dss-container\" style={randomImage == null ? {} : {\n                background: \"white\",\n                //\" linear-gradient(45deg,rgba(0, 0, 0, 0.518),rgba(255, 255, 255, 0.566))\",\n                backgroundSize: \"cover\"\n            }}>\n                <MainNav showMenu={()=> setMMenu(true)} />\n                <MobileMenu shown={mMenu} handleClose={()=> setMMenu(false)} />\n                <div className=\"div\" style={randomImage == null ? {} : {\n                    background: `url('${c.backendUrl}/files/images/manga2.jpg')`,\n                    backgroundSize: \"cover\",\n                    backgroundAttachment: \"fixed\",\n                    backgroundPosition: \"center\",\n                    backgroundAttachment: \"fixed\"\n                }}>\n                    <div className=\"dss-search\" >\n                        <div className=\"dss-search-content\">\n                            <span className=\"dss-search-mtext\">\n                                Discover <br />New Destinations\n                            </span>\n                            <span className=\"dss-search-text\">\n                                Destinations from our Travel Gallery. Below is a list of Locations.\n                            </span>\n                            <div className=\"dss-search-div\">\n                                <FontAwesomeIcon style={{ color: \"black\" }} icon={faSearch} />\n                                <input type=\"text\" id=\"dss-search-main\" onChange={(e) => {\n                                    let pl = places.filter(p => p.name.toLowerCase().includes(\n                                        document.querySelector('#dss-search-main').value.toLowerCase()));\n                                    setPlacesF(pl)\n                                    console.log(e.target.value)\n                                }} placeholder=\"Search for Destinations\" />\n                            </div>\n                            <span className=\"dss-search-small\" style={{ color: \"royalblue\" }}>\n                                This filters location by name. To have a more comprehensive filter, Kindly use the <b style={{ fontSize: 'small', textDecoration: 'underline', cursor: 'pointer', color: \"green\" }} onClick={() => setOSearch(true)}>Overral Search&nbsp;</b>. Thank You.\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div id=\"dsstn\">\n                <div>\n                    <div style={{ fontFamily: 'MSB', fontSize: \"larger\", display: 'flex', alignItems: 'center' }}>\n                        {\n                            placesF.length === places.length ? `${places.length.toLocaleString()} Locations`\n                                : <div style={{ fontFamily: 'MSB', fontSize: \"larger\" }}>{placesF.length} Locations <span className=\"dss-badge\">Filtered</span></div>\n                        }\n                        <div className=\"dss-suggest\" >\n                            <FontAwesomeIcon icon={faPlusSquare} />\n                            <span>Suggest a Place</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"dss-places-container\">\n                    <div className=\"dss-places\">\n                        {placesF.map(p => (\n                            <div className=\"dss-place\" onClick={() => {\n                                setSelPlace(p)\n                                let pp = p\n                                if (pp.destinations < 1) {\n                                    pp.bgI = getRImg(p)\n                                    setSelPlace(pp)\n                                    setDMod(true)\n                                }\n                                else {\n                                    let dest = p.destinations[c.getRandomInt(0, p.destinations.length - 1)]\n                                    let ri = c.getRandomInt(0, dest.images.split(',').length - 1)\n                                    console.log(dest.images.split(','), ri)\n                                    pp.bgI = `${c.backendUrl}/files/imagebyid/${dest.images.split(',')[ri]}`\n                                    setSelPlace(pp)\n                                    setDMod(true)\n                                }\n                            }} onMouseEnter={() => {\n                                if (p.destinations.length > 0) {\n                                    let ranDes = c.getRandomInt(0, p.destinations.length - 1);\n                                    let imgss = p.destinations[ranDes].images.split(',')\n                                    if (imgss.length > 0) {\n                                        let ranIm = c.getRandomInt(0, imgss.length - 1)\n                                        document.querySelector(`#rI${p.id}`).setAttribute('src', `${c.backendUrl}/files/imagebyid/${p.destinations[ranDes].images.split(',')[ranIm]}`)\n                                    }\n                                }\n                            }} >\n                                <img id={`rI${p.id}`} src={getRImg(p)} alt=\"\" />\n                                <div className=\"dss-place-content\">\n                                    <span id=\"dss-name\">{p.name}</span>\n                                    <span id=\"dss-count\" style={{ paddingTop: \".2rem\" }}>{p.destinations.length.toLocaleString()} Destinations, {p.facilities.length.toLocaleString()} Facilities</span>\n                                </div>\n                            </div>\n                        ))}\n                        <div className=\"dss-place\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'relative' }}>\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                                <FontAwesomeIcon icon={faPlus} />\n                                <span style={{ fontFamily: 'MSB' }}>Suggest a Place</span>\n                            </div>\n                            <span style={{ fontSize: 'small', position: 'absolute', bottom: \"1rem\" }}>Do you have / Know a good site?</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Destinations","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/MainNavigator.jsx",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/DestinationsModal.jsx",["112","113","114"],"import React, { useState, useEffect } from 'react'\nimport { TimesIcon } from 'react-line-awesome'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './css/destmodal.css'\nimport { faExclamation, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { NavLink } from 'react-router-dom'\n\nimport c from '../myConstants'\n\nfunction DestinationsModal({ place, shown, handleClose, closeModal }) {\n    const [s, setS] = useState(\"\")\n    const [sf, setSf] = useState(\"\")\n    if (place !== null) {\n        let destF = place.destinations\n        let facF = place.facilities\n        return (\n            <div style={\n                shown ? { opacity: 1, pointerEvents: \"all\" } : { opacity: 0, pointerEvents: \"none\" }\n            } className=\"destmodal\" >\n                <div className=\"destmodal-content\" style={shown ? { transform: \"scale(1)\" } : { transform: \"scale(.8)\" }}>\n                    <span className=\"destmodal-content-title\">{place.name}</span>\n                    <div className=\"destmodal-destinations\">\n                        <div className=\"destmodal-l-top\">\n                            Destinations\n                            <div className=\"destmodal-badge\">{\n                                destF.length\n                            }</div>\n                            <div className=\"destmodal-dest-search\">\n                                <FontAwesomeIcon icon={faSearch} />\n                                <input type=\"text\" placeholder=\"Find Destinations\" onChange={(e) => {\n                                    setS(e.target.value.toLowerCase())\n                                }} />\n                            </div>\n                        </div>\n                        <div className=\"destmodal-list\">\n                            {\n                                destF.filter(d => d.name.toLowerCase().includes(s))\n                                    .map(d => (\n                                        <div className=\"destmodal-item\">\n                                            <img src={`${c.backendUrl}/files/imagebyid/${d.images.split(',')[0]}`} alt=\"\" />\n                                            <span>{d.name}</span>\n                                            <NavLink to={`/destination/${d.id}`}></NavLink>\n                                        </div>\n                                    ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"destmodal-facilities\">\n                        <div className=\"destmodal-l-top\">\n                            Facilities\n                            <div className=\"destmodal-badge\">{\n                                place.facilities.length\n                            }</div>\n                            <div className=\"destmodal-fac-search\">\n                                <FontAwesomeIcon icon={faSearch} />\n                                <input type=\"text\" placeholder=\"Find Facilities\" onChange={(e) => {\n                                    setSf(e.target.value.toLowerCase())\n                                }} />\n                            </div>\n                        </div>\n                        <div className=\"destmodal-list\">\n                            {\n                                facF.filter(d => d.name.toLowerCase().includes(sf))\n                                .map(d => (\n                                    <div className=\"destmodal-item\">\n                                        <img src={`${c.backendUrl}/files/facility/imagebyid/${d.images.split(',')[0]}`} alt=\"\" />\n                                        <span>{d.name}</span>\n                                        <NavLink to={`/facility/${d.id}`}></NavLink>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <TimesIcon onClick={handleClose} className=\"destmodal-close\" onClick={() => closeModal()} />\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div style={\n                shown ? { opacity: 1, pointerEvents: \"all\" } : { opacity: 0, pointerEvents: \"none\" }\n            } className=\"destmodal\" >\n                <div className=\"destmodal-content\">\n                    <div className=\"bubbling\" style={{ color: \"red\", display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', position: \"fixed\", top: 0, bottom: 0, left: 0, right: 0 }}>\n                        <FontAwesomeIcon size=\"4x\" icon={faExclamation} style={{ margin: \".5rem\" }} />\n                        <span style={{ textAlign: 'center' }}>No Valid Location <br />Selected</span>\n                    </div>\n                    <TimesIcon onClick={handleClose} className=\"destmodal-close\" onClick={() => closeModal()} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DestinationsModal","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Components/MobileMenu.jsx",[],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Social.jsx",["115"],"import NavBar from '../Social/Components/NavBar'\nimport './css/social.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendar, faCar, faPlane, faSuitcase, faUserFriends, faUsers } from '@fortawesome/free-solid-svg-icons'\n\nfunction Social(params) {\n    return <social>\n        <NavBar />\n        <content>\n            <lsidebar>\n                <ul>\n                    <li> <FontAwesomeIcon icon={faUserFriends} /> Friends <badge>214</badge></li>\n                    <li> <FontAwesomeIcon icon={faUsers} /> Groups <badge>3</badge></li>\n                </ul>\n                <ul>\n                    <li> <FontAwesomeIcon icon={faPlane} /> Favorite Destinations <badge>214</badge></li>\n                    <li> <FontAwesomeIcon icon={faSuitcase} /> Favourite Facilities <badge>3</badge></li>\n                    <li> <FontAwesomeIcon icon={faCar} /> My Trips <badge>3</badge></li>\n                </ul>\n                <ul>\n                    <li><FontAwesomeIcon icon={faCalendar} /> Calendar <badge>214</badge></li>\n                </ul>\n            </lsidebar>\n            <maincontent>\n                <newpost>\n                    <newtop>\n                        <img />\n                    </newtop>\n                </newpost>\n            </maincontent>\n            <rsidebar>Right Side Bar</rsidebar>\n        </content>\n    </social>\n}\n\nexport default Social","/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/Social/Components/NavBar.jsx",[],["116","117"],"/Users/obirijob/Desktop/Tour Kenya Project/Frontend/src/PageComponents/Facilities.jsx",["118"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './css/facilities.css'\n\nimport React, { useState } from 'react'\nimport Search from '../Components/Search'\nimport MainNavigator from '../Components/MainNavigator'\nimport { faMapMarker, faMapPin, faSearchLocation } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Facilities(p) {\n    const [oSearch, setOSearch] = useState(false)\n    return (\n        <facilities>\n            <Search shown={oSearch} handleClose={() => setOSearch(false)} setPlace={(p) => {\n                setOSearch(false)\n            }} />\n            <MainNavigator />\n            <bgbox1 />\n            <bgbox2 />\n            <bgbox3 />\n            <bgbox4 />\n            <content>\n                <welcome>\n                    <welcometext>\n                        <big>Hotels & <br />Facilities</big>\n                        <small>Select Location</small>\n                        <welcomesearch>\n                            <FontAwesomeIcon icon={faMapMarker} />\n                            <input placeholder=\"Type a Location\" />\n                            <FontAwesomeIcon icon={faSearchLocation} />\n                        </welcomesearch>\n                        <small>Filter by location</small>\n                    </welcometext>\n                    <welcomeimages>\n                        \n                    </welcomeimages>\n                </welcome>\n            </content>\n        </facilities>\n    )\n}",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":18,"column":12,"nodeType":"125","messageId":"126","endLine":18,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":47,"column":8,"nodeType":"129","endLine":47,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":60,"column":19,"nodeType":"133","messageId":"134","endLine":60,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":248,"column":53,"nodeType":"133","messageId":"134","endLine":248,"endColumn":55},{"ruleId":"131","severity":1,"message":"132","line":261,"column":53,"nodeType":"133","messageId":"134","endLine":261,"endColumn":55},{"ruleId":"131","severity":1,"message":"132","line":269,"column":53,"nodeType":"133","messageId":"134","endLine":269,"endColumn":55},{"ruleId":"127","severity":1,"message":"135","line":34,"column":8,"nodeType":"129","endLine":34,"endColumn":10,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":218,"column":70,"nodeType":"133","messageId":"134","endLine":218,"endColumn":72},{"ruleId":"131","severity":1,"message":"132","line":280,"column":112,"nodeType":"133","messageId":"134","endLine":280,"endColumn":114},{"ruleId":"131","severity":1,"message":"132","line":281,"column":112,"nodeType":"133","messageId":"134","endLine":281,"endColumn":114},{"ruleId":"131","severity":1,"message":"132","line":297,"column":112,"nodeType":"133","messageId":"134","endLine":297,"endColumn":114},{"ruleId":"131","severity":1,"message":"132","line":298,"column":112,"nodeType":"133","messageId":"134","endLine":298,"endColumn":114},{"ruleId":"131","severity":1,"message":"132","line":338,"column":77,"nodeType":"133","messageId":"134","endLine":338,"endColumn":79},{"ruleId":"131","severity":1,"message":"132","line":338,"column":105,"nodeType":"133","messageId":"134","endLine":338,"endColumn":107},{"ruleId":"138","severity":1,"message":"139","line":347,"column":69,"nodeType":"140","endLine":347,"endColumn":191},{"ruleId":"123","severity":1,"message":"141","line":364,"column":87,"nodeType":"125","messageId":"126","endLine":364,"endColumn":90},{"ruleId":"131","severity":1,"message":"132","line":437,"column":99,"nodeType":"133","messageId":"134","endLine":437,"endColumn":101},{"ruleId":"131","severity":1,"message":"132","line":441,"column":179,"nodeType":"133","messageId":"134","endLine":441,"endColumn":181},{"ruleId":"131","severity":1,"message":"132","line":443,"column":118,"nodeType":"133","messageId":"134","endLine":443,"endColumn":120},{"ruleId":"131","severity":1,"message":"132","line":447,"column":179,"nodeType":"133","messageId":"134","endLine":447,"endColumn":181},{"ruleId":"123","severity":1,"message":"142","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":21},{"ruleId":"123","severity":1,"message":"143","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":9},{"ruleId":"123","severity":1,"message":"144","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":35,"column":28,"nodeType":"133","messageId":"134","endLine":35,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":80,"column":21,"nodeType":"147","messageId":"134","endLine":80,"endColumn":41},{"ruleId":"123","severity":1,"message":"148","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":74,"column":82,"nodeType":"151","endLine":74,"endColumn":110},{"ruleId":"149","severity":1,"message":"150","line":88,"column":82,"nodeType":"151","endLine":88,"endColumn":110},{"ruleId":"138","severity":1,"message":"139","line":28,"column":25,"nodeType":"140","endLine":28,"endColumn":32},{"ruleId":"119","replacedBy":"152"},{"ruleId":"121","replacedBy":"153"},{"ruleId":"123","severity":1,"message":"154","line":8,"column":23,"nodeType":"125","messageId":"126","endLine":8,"endColumn":31},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'selectedImg' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectImage'. Either include it or remove the dependency array.","ArrayExpression",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id' and 'loadDestination'. Either include them or remove the dependency array.",["158"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cmm' is assigned a value but never used.","'FacebookLogin' is defined but never used.","'c' is defined but never used.","'NavLink' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundAttachment'.","ObjectExpression","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["155"],["156"],"'faMapPin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [selectImage]",{"range":"163","text":"164"},"Update the dependencies array to be: [id, loadDestination]",{"range":"165","text":"166"},[1965,1967],"[selectImage]",[1439,1441],"[id, loadDestination]"]